package cs149;
import java.io.ByteArrayOutputStream;
import java.io.RandomAccessFile;
import java.nio.MappedByteBuffer;
import java.nio.channels.*;
import java.nio.Buffer;
import java.nio.ByteBuffer;
import java.nio.channels.FileChannel;
public class BigBag {
	public static void main (String[] args) {
		for (String s : args) {
			System.out.println(s);
		}
		if (args.length < 2) { 
			System.out.println("Improper usage");
			System.exit(1);
		}
		try (RandomAccessFile reader = new RandomAccessFile("src/test/resources/test_read.in", r);)
		FileChannel channel = reader.getChannel();
		MappedByteBuffer buff = (READ_ONLY, 0, 1024 * 64);
		  throws IOException { 
		    try (RandomAccessFile reader = new RandomAccessFile("src/test/resources/test_read.in", "r");
		        FileChannel channel = reader.getChannel();
		        ByteArrayOutputStream out = new ByteArrayOutputStream()) {
		 
		        MappedByteBuffer buff = channel.map(FileChannel.MapMode.READ_ONLY, 6, 5);
		 
		        if(buff.hasRemaining()) {
		          byte[] data = new byte[buff.remaining()];
		          buff.get(data);
		          System.out.println(data);
		        }
		    }
	}
}
